service: risk-tower-chatbot

plugins:
  - serverless-offline
  - serverless-plugin-warmup

package:
  individually: true
  include:
    - node_modules
    - dist

provider:
  name: aws
  region: eu-central-1
  stage: ${opt:stage, 'dev'}
  runtime: nodejs12.x
  environment:
    DOMAIN: ${file(./config/config.${opt:stage, self:provider.stage, 'dev'}.json):DOMAIN}
    DIALOGFLOW_CLIENT_EMAIL: ${file(./config/config.${opt:stage, self:provider.stage, 'dev'}.json):DIALOGFLOW_CLIENT_EMAIL}
    DIALOGFLOW_PRIVATE_KEY: ${file(./config/config.${opt:stage, self:provider.stage, 'dev'}.json):DIALOGFLOW_PRIVATE_KEY}
    DIALOGFLOW_PROJECT_ID: ${file(./config/config.${opt:stage, self:provider.stage, 'dev'}.json):DIALOGFLOW_PROJECT_ID}
    SLACK_BOT_TOKEN: ${file(./config/config.${opt:stage, self:provider.stage, 'dev'}.json):SLACK_BOT_TOKEN}
    OKTA_CLIENT_ID: ${file(./config/config.${opt:stage, self:provider.stage, 'dev'}.json):OKTA_CLIENT_ID}
    OKTA_CLIENT_SECRET: ${file(./config/config.${opt:stage, self:provider.stage, 'dev'}.json):OKTA_CLIENT_SECRET}
    FONTCONFIG_PATH: ${file(./config/config.${opt:stage, self:provider.stage, 'dev'}.json):FONTCONFIG_PATH}
    STAGE: ${file(./config/config.${opt:stage, self:provider.stage, 'dev'}.json):STAGE}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource: '*'

functions:
  replier:
    handler: dist/lambdas/replier/index.handler
    events:
      - http:
          method: post
          path: replier
    warmup: true
  events-api:
    handler: dist/lambdas/events-api/index.handler
    events:
      - http:
          method: post
          path: events-api
  update-dialogflow-companies:
    handler: dist/lambdas/update-dialogflow-companies/index.handler
    events:
      - http:
          method: post
          path: update-dialogflow-companies
      - schedule:
          description: 'update the dialogflow company entity once a day'
          rate: cron(0 5 * * ? *)
          enabled: true
